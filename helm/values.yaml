# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace:
  # Specifies whether a namespace should be created
  create: true
  # The name of the namespace to use.
  # If not set and create is true, a name is generated using the name template
  name:

#config:
#  emailDomainGroups:
#    enable: false
#    prefix: email-domain.
#  identityProviderGroups:
#    enable: false
#    prefix: identity-provider.
#  api:
#  - url: https://example.com/user/lookup
#    authSecret:
#      name: api-auth
#    groupMappings:
#    # Add user to admin group depending of value in "isAdmin" field
#    - jmesPath: isAdmin
#      valueToGroup:
#      - group: admin
#        value: true
#    # Add user to groups with names that match the "roles" field returned by the API
#    - jmesPath: roles
#  ldap:
#  - url: ldaps://ipa.example.com
#    authSecret:
#      name: ldap-auth
#    caCert: |
#      -----BEGIN CERTIFICATE-----
#      ...
#      -----END CERTIFICATE-----
#    userBaseDN: cn=users,dc=example,dc=com
#    userObjectClass: inetOrgPerson
#    userSearchAttribute: mail
#    userSearchValue: email
#    attributeToGroup:
#    - attribute: memberOf
#      valueToGroup:
#      - group: admins
#        value: cn=admins,cn=groups,dc=example,dc=com
#  salesforce:
#  - url: https://login.salesforce.com
#    consumerKey: ...
#    consumerSecret:
#      name: salesforce-consumer-secret
#   fieldToGroup:
#   - name: partnerTier
#   userSearchField: federationId
#   userSearchValue: name
#   username: username@example.com

#apiSecrets:
#- name: test-api-auth
#  bitwardenSecretName: partner_api_secret
# or:
#  parameters: ...
#  url: ...


#ldapSecrets:
#- name: ldap-auth
#  bitwardenSecretName: ...
#  bitwardenSecretKey: ...
# or:
#  bindDn: uid=reader,cn=users,dc=example,dc=com
#  bindPassword: password

#salesforceSecrets:
#- name: salesforce-consumer-secret
#  bitwardenSecretName: ...
#  bitwardenSecretKey: ...
# or:
#  consumerSecret: |
#    -----BEGIN PRIVATE KEY-----
#    ...
#    -----END PRIVATE KEY-----

deploy: true
replicaCount: 1

image:
  repository: quay.io/rhpds/user-group-operator
  pullPolicy: Always
  tagOverride: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources:
  limits:
    cpu: "1"
    memory: 128Mi
  requests:
    cpu: 500m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
